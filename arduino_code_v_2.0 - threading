#include <Thread.h>
#include <ThreadController.h>
#include <Stepper.h>

String command;

const int trigPin = 5;
const int echoPin = 4;
const int stepperPin = 3;
const int pumpPin = 2;


float duration;
float distance;
float reference = 15;

const float STEPS_PER_REV = 32;
const float GEAR_RED = 64;
const float STEPS_PER_OUT_REV = STEPS_PER_REV * GEAR_RED;

int StepsRequired;

Stepper steppermotor_1(STEPS_PER_REV, 10, 12, 11 ,13);
Stepper steppermotor_2(STEPS_PER_REV, 6, 8, 7 ,9);


volatile bool pumpOn = false;
volatile bool turbineOn = false;
volatile bool nodventilOn = false;



ThreadController ThreadHandler = ThreadController();


void pumpThread() 
{
  while (pumpOn)
  {
    digitalWrite(pumpPin, HIGH);
  }
  digitalWrite(pumpPin, LOW);
}

void turbineThread()
{
	while (turbineOn) 
  {
    digitalWrite(pumpPin, HIGH);
    steppermotor_1.step(StepsRequired);
  }
  steppermotor_1.step(-StepsRequired);
	digitalWrite(pumpPin, LOW);
      
	}

void nodventilThread() 
{
	while (nodventilOn) 
  {
		digitalWrite(pumpPin, HIGH);
    steppermotor_1.step(StepsRequired);
    steppermotor_2.step(StepsRequired);
	}
	digitalWrite(pumpPin, LOW);
  steppermotor_1.step(-StepsRequired);
  steppermotor_2.step(-StepsRequired);
}

void readDistanceThread()
{
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  float distance = (duration * 0.034 / 2);
  Serial.println(distance);
  delay(1000);
}



Thread pumpThread_1 = Thread();
Thread turbineThread_2 = Thread();
Thread nodventilThread_3 = Thread();
Thread readDistanceThread_4 = Thread();



void setup() 
{
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT); 
  pinMode(echoPin, INPUT); 
  pinMode(pumpPin,OUTPUT); 
  pinMode (stepperPin, OUTPUT);

  
  pumpThread_1.onRun(pumpThread);
  ThreadHandler.add(&pumpThread_1);

  turbineThread_2.onRun(turbineThread);
  ThreadHandler.add(&turbineThread_2);

  nodventilThread_3.onRun(nodventilThread);
  ThreadHandler.add(&nodventilThread_3);

  readDistanceThread_4.onRun(readDistanceThread);
  ThreadHandler.add(&readDistanceThread_4);

}

void loop() 
{

  readDistanceThread_4.run();

if (Serial.available() > 0) 
 {
    String command = Serial.readStringUntil('\n');
    if (command == "Pump\n")
    {
      while(distance > reference)
      {
        pumpOn = true;
        turbineOn = false;
        nodventilOn = false;
        
        pumpThread_1.run();
      }
    pumpOn = false;
    turbineOn = false;
    nodventilOn = false;
    }
    
    else if (command == "Turbine\n")
    {
      while ( distance < reference)
      {
        pumpOn = false;
        turbineOn = true;
        nodventilOn = false;

        turbineThread_2.run();

        // turbineThread.stop() // turbineThread.kill() // turbineThread.pause() // turbineThread.wait()

      }
      pumpOn = false;
      turbineOn = false;
      nodventilOn = false;
    } 
    else if (command == "Nodventil\n")
    { 
      while ( distance < reference)
      {
        pumpOn = false;
        turbineOn = false;
        nodventilOn = true;

        nodventilThread_3.run();
      }
      pumpOn = false;
      turbineOn = false;
      nodventilOn = false;
    } 
    else if (command == "Stopp\n")
    {
      pumpOn = false;
      turbineOn = false;
      nodventilOn = false;
    }   
    }
 }
