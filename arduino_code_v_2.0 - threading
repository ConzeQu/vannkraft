#include <Thread.h>
#include <ThreadController.h>
#include <Stepper.h>

String command;

const int trigPin = 5;
const int echoPin = 4;
const int stepperPin = 3;
const int pumpPin = 2;


float duration;
float distance;
float reference = 15;

const float STEPS_PER_REV = 32;
const float GEAR_RED = 64;
const float STEPS_PER_OUT_REV = STEPS_PER_REV * GEAR_RED;

int StepsRequired;

Stepper steppermotor_1(STEPS_PER_REV, 10, 12, 11 ,13);
Stepper steppermotor_2(STEPS_PER_REV, 6, 8, 7 ,9);


volatile bool stopmotors = false;



ThreadController ThreadHandler = ThreadController();


// define the pump thread function
void pumpThreadFunction() 
{
  while (!stopmotors)
  {
    digitalWrite(pumpPin, HIGH);
  }
  digitalWrite(pumpPin, LOW);
}

void turbineThreadFunction()
{
	while (!stopmotors) 
  {
    digitalWrite(pumpPin, HIGH);
    steppermotor_1.step(StepsRequired);
  }
  steppermotor_1.step(-StepsRequired);
	digitalWrite(pumpPin, LOW);
      
	}


void nodventilThreadFunction() 
{
	while (!stopmotors) 
  {
		digitalWrite(pumpPin, HIGH);
    steppermotor_1.step(StepsRequired);
    steppermotor_2.step(StepsRequired);
	}
	digitalWrite(pumpPin, LOW);
  steppermotor_1.step(-StepsRequired);
  steppermotor_2.step(-StepsRequired);
}


// create the pump thread object
Thread pumpThread = Thread();
Thread turbineThread = Thread();
Thread nodventilThread = Thread();
Thread readDistanceThread = Thread();



void setup() 
{
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT); 
  pinMode(echoPin, INPUT); 
  pinMode(pumpPin,OUTPUT); 
  pinMode (stepperPin, OUTPUT);

  
  pumpThread.onRun(pumpThreadFunction);
  ThreadHandler.add(&pumpThread);

  turbineThread.onRun(turbineThreadFunction);
  ThreadHandler.add(&turbineThread);

  nodventilThread.onRun(nodventilThreadFunction);
  ThreadHandler.add(&nodventilThread);
}

void loop() 
{
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  float distance = (duration * 0.034 / 2);

  Serial.println(distance);
  delay(1000);
if (Serial.available() > 0) 
 {
    String command = Serial.readStringUntil('\n');
    if (command == "Pump\n")
    {
      stopmotors = false;
      pumpThread.run();
      turbineThread.stop();
      nodventilThread.stop();
    }
    
    else if (command == "Turbine\n")
    {
      stopmotors = false;
      turbineThread.run();
      pumpThread.stop();
      nodventilThread.stop();
    } 
    else if (command == "Nodventil\n")
    {
      stopmotors = false;
      turbineThread.run();
      nodventilThread.run();
      pumpThread.stop();
    } 
    else if (command == "Stopp\n")
    {
      stopmotors = true;
    }   
    }
 }
